name: Build Promtail releases
on:
  # Manual trigger
  workflow_call:
    inputs:
      release:
        required: true
        type: string

permissions:
  contents: write

jobs:

  build:
    name: Create shallow tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout grafana/loki, tag ${{inputs.release}}
        uses: actions/checkout@v2
        with:
          repository: grafana/loki
          ref: ${{inputs.release}}
          fetch-depth: 1
          path: ./loki-upstream
      - name: Checkout canonical/loki-k8s-operator
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: ./loki-k8s-operator
      - name: Prepare Goreleaser configurations
        # Store the Goreleaser configs for Promtail outside of the
        # working dir, as we will override that with the tag
        run: |
          cp ./loki-k8s-operator/promtail-build/static/goreleaser.yml ./promtail-static-goreleaser.yml
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.8
      - name: Build Promtail
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          workdir: ./loki-upstream
          args: build --rm-dist --config ../promtail-static-goreleaser.yml
      - name: Attach promtail-amd64 artifact to run
        uses: actions/upload-artifact@v3
        with:
          name: promtail-amd64
          path: ./loki-upstream/dist/loki_linux_amd64/promtail
      - name: Attach promtail-arm64 artifact to run
        uses: actions/upload-artifact@v3
        with:
          name: promtail-arm64
          path: ./loki-upstream/dist/loki_linux_arm64/promtail

  test:
    name: Test Promtail
    runs-on: ubuntu-latest
    needs: build
    # TODO: Also run tests on arm64
    strategy:
      matrix:
        arch: [amd64]
        base: [alpine, debian, rh-ubi8, scratch, ubuntu]
    steps:
      - name: Checkout canonical/loki-k8s-operator
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download the promtail-${{matrix.arch}} artefact
        uses: actions/download-artifact@v3
        with:
          name: promtail-${{matrix.arch}}
          path: ./dist/loki_linux_${{matrix.arch}}/
      - name: Check the linkage of the Promtail binary
        run: |
          file ./dist/loki_linux_${{matrix.arch}}/promtail
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and test ${{matrix.base}} image
        # If promtail is borked on this base, the `docker run` invocation will fail
        run: |
          DOCKER_BUILDKIT=1 docker build . -f promtail-build/static/test/Dockerfile.${{matrix.base}} -t promtail-${{matrix.base}}
          docker run promtail-${{matrix.base}}

  publish:
    name: Publish promtail resources to CharmHub.io
    runs-on: ubuntu-latest
    needs: test
    env:
      RELEASE: promtail-${{inputs.release}}
    steps:
      - name: Checkout grafana/loki, tag ${{inputs.release}}
        uses: actions/checkout@v2
        with:
          repository: grafana/loki
          ref: ${{inputs.release}}
          fetch-depth: 1
          path: ./loki-upstream
      - name: Checkout canonical/loki-k8s-operator, ${{github.ref}}
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: ./loki-k8s-operator
      - name: Create shallow tag
        # We rebase the commit from the release tag from the upstream loki
        # repository on the initial commit of canonical/loki-k8s-operator,
        # because GitHub does not allow us to push a shallow tag (tag to a
        # commit with no parent), so we "reconcile" the history of the
        # two repositories to have the initial commit of canonical/loki-k8s-operator
        # as common history.
        run: |
          initial_operator_commit=$(cd ./loki-k8s-operator && git log main --oneline | tail -1 | awk '{ print $1 }')
          cd ./loki-upstream
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote add charm ../loki-k8s-operator
          git fetch charm
          git rebase "${initial_operator_commit}" --strategy-option ours
          git tag "${RELEASE}"
          cd ../loki-k8s-operator
          git push origin "${RELEASE}"
      - name: Download the promtail-amd64 artefact
        uses: actions/download-artifact@v3
        with:
          name: promtail-amd64
          path: ./dist/loki_linux_amd64/
      - name: Download the promtail-arm64 artefact
        uses: actions/download-artifact@v3
        with:
          name: promtail-arm64
          path: ./dist/loki_linux_arm64/
      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        with:
          name: "Promtail ${{inputs.release}}"
          body: |
            Statically-linked builds for Promtail, based on the [upstream '${{inputs.release}}'](https://github.com/grafana/loki/releases/tag/${{inputs.release}}) release of the `grafana/loki` project.
          artifacts: ./dist/*
          tag: promtail-${{inputs.release}}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install charmcraft
        run: |
          sudo snap install charmcraft --classic
      - name: Upload amd64 assets
        uses: actions/upload-artifact@v3
        env:
          CHARMCRAFT_AUTH: ${{ secrets.CHARMHUB_TOKEN }}
        with:
          name: promtail-amd64
          path: ./loki-k8s-operator/dist/loki_linux_amd64/promtail
      - name: Upload arm64 assets
        uses: actions/upload-artifact@v3
        env:
          CHARMCRAFT_AUTH: ${{ secrets.CHARMHUB_TOKEN }}
        with:
          name: promtail-arm64
          path: ./loki-k8s-operator/dist/loki_linux_arm64/promtail