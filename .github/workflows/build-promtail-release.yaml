name: Build Promtail releases
on:
  # Manual trigger
  workflow_call:
    inputs:
      release:
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    name: Create shallow tag
    runs-on: ubuntu-latest
    env:
      RELEASE: promtail-${{inputs.release}}
    steps:
      - name: Checkout grafana/loki, tag ${{inputs.release}}
        uses: actions/checkout@v2
        with:
          repository: grafana/loki
          ref: ${{inputs.release}}
          fetch-depth: 1
          path: ./loki-upstream
      - name: Checkout canonical/loki-k8s-operator
        uses: actions/checkout@v2
        with:
          repository: grafana/loki
          fetch-depth: 0
          path: ./loki-k8s-operator
      - name: Prepare Goreleaser configurations
        # Store the Goreleaser configs for Promtail outside of the
        # working dir, as we will override that with the tag
        run: |
          cp ./loki-k8s-operator/promtail-goreleaser.yml .
      - name: Create shallow tag
        run: |
          cd ./loki-upstream
          git tag ${RELEASE}
          git remote add charm ../loki-k8s-operator
          git push charm ${RELEASE}
          cd ../loki-k8s-operator
          git checkout ${RELEASE}
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Build Promtail
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          workdir: ./loki-k8s-operator
          args: release --rm-dist --config ../promtail-goreleaser.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CGO_ENABLED: 0

      # - name: Trigger release build
      #   # If we do not have the tag we expect, trigger the new build
      #   #if: ${{ steps.loki-latest-release.outputs.release != '' }}
      #   run: "echo ${{inputs.release}}"
